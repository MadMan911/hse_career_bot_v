from variables import *
import re
from data.students import *
from data.events import Event
from data.companies import Company


def set_env_functions(real_bot):
    global bot
    bot = real_bot

def try_to_buy_merch(message, merch_name):
    student = Session.query(Student).get(message.chat.id)
    balance = int(student.balance)

    if student.merch_buy_ability_amt == 0:
            bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π –≤–µ—â–∏ –∫—É–ø–∏—Ç—å –Ω–µ–ª—å–∑—è', reply_markup=keyboard_back_menu)
    else:
        if merch_name.lower() == 'cup':
            if balance < cup_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= cup_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è HSE –∫—Ä—É–∂–∫–∞ üí•</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å: \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'tshirtblack':
            if balance < tshirt_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= tshirt_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–∫—Ä—É—Ç–µ–π—à–∞—è HSE —Ñ—É—Ç–±–æ–ª–∫–∞ üî•</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'tshirtblue':
            if balance < tshirt_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= tshirt_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–∫—Ä—É—Ç–µ–π—à–∞—è HSE —Ñ—É—Ç–±–æ–ª–∫–∞ üî•</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'hudi':
            if balance < hudi_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= hudi_price
                student.merch_buy_ability_amt -= 1
                student.bought_merch += f'<b>–ù–µ–æ—Ç—Ä–∞–∑–∏–º—ã–π HSE —Å–≤–∏—Ç—à–æ—Ç üå≤</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'shopper':
            if balance < shoper_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= shoper_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–°–∞–º—ã–π —É–¥–æ–±–Ω—ã–π HSE —à–æ–ø–ø–µ—Ä ‚òÄ</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'bottle':
            if balance < bottle_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= bottle_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–∫—Ä—É—Ç–µ–π—à–∞—è HSE –±—É—Ç—ã–ª–∫–∞ üî•</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    
        elif merch_name.lower() == 'termocup':
            if balance < bottle_price:
                 bot.send_message(message.chat.id, '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–∏–Ω–æ–≤, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å —ç—Ç–æ', reply_markup=keyboard_back_menu)
            else:
                student.balance -= bottle_price
                student.merch_buy_ability_amt -= 1 
                student.bought_merch += f'<b>–∫—Ä—É—Ç–µ–π—à–∞—è HSE —Ç–µ—Ä–º–æ–∫—Ä—É–∂–∫–∞ üî•</b>\n'
                Session.commit()
                bot.send_message(message.chat.id, f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π, —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å \n{student.bought_merch}', parse_mode='HTML', reply_markup=keyboard_back_menu)
    

    update_phase(message, READY)
    return
   

def new_name(message):
    if message.text == '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –§–ò–û:')
        bot.register_next_step_handler(message, new_name)
        return
    if not check_name(message):
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –§–ò–û –µ—â–µ —Ä–∞–∑ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ!')
        bot.register_next_step_handler(message, new_name)
        return
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', reply_markup=keyboard_back_menu)
    Session.query(Student).get(message.chat.id).fio = message.text
    Session.commit()
    update_phase(message, READY)


def new_email(message):
    if message.text == '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å?':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É:')
        bot.register_next_step_handler(message, new_email)
        return
    if not check_email(message):
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ—á—Ç—É!')
        bot.register_next_step_handler(message, new_email)
        return
    Session.query(Student).get(message.chat.id).email = message.text
    update_phase(message, READY)
    Session.commit()
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!', reply_markup=keyboard_back_menu)


def update_students():
    students = Session.query(Student)
    students_dict = dict()
    for it in students:
        students_dict[it.chat_id] = it
    return students_dict


def update_promo_codes():
    stud = update_students()
    promo_codes = []
    for student in stud.values():
        promo_codes.append(student.promo_code)
    return promo_codes


def get_phase(message):
    student = Session.query(Student).get(message.chat.id)
    if student is None:
        return -1
    return student.phase


def update_phase(message, new_phase):
    student = Session.query(Student).get(message.chat.id)
    student.phase = new_phase
    Session.commit()


def update_wal1(message):
    stud = Session.query(Student).get(message.chat.id)
    stud.update_wal()


def check_email(message):
    if re.fullmatch(mail_pattern, message.text):
        return True
    return False


def check_name(message):
    if message.content_type != 'text':
        return False
    name = message.text
    return check_name_name(name)


def check_name_name(name):
    if not 2 <= len(name.split()) <= 3:
        return False
    for symb in name:
        if symb.isdigit():
            return False
    return True


def catalog():
    pass
    #Session.get(Catalog)

# —Å–ø—Ä–æ—Å–∏—Ç—å –ø—Ä–æ –æ—Ü–µ–Ω–∫—É –∫–æ–º–ø–∞–Ω–∏–π
# def assess(message, stud):
#     bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫–æ–º–ø–∞–Ω–∏—é, –≤–µ–±–∏–Ω–∞—Ä—ã –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±–µ –ø–æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–∞–∏–±–æ–ª–µ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏:',
#                      reply_markup=get_kb_assess())
#
#
# def enter_coins(message, key, stud):
#     try:
#         coins = int(message.text)
#         if coins <= 0:
#             raise ValueError
#         if coins > stud.wal1:
#             raise ValueError
#     except ValueError:
#         bot.send_message(stud.chat_id, f'–¢—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –æ—Ç 1 –¥–æ {stud.wal1} –∫–æ–∏–Ω–æ–≤, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ –µ—â–µ —Ä–∞–∑:')
#         bot.register_next_step_handler(message, enter_coins, key, stud)
#         return
#     admit_coins(coins, key, stud)
#     bot.send_message(message.chat.id, '–ü–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω!')
#     check_if_assessed(message, stud)
#
#
# def check_if_assessed(message, stud):
#     if stud.wal1 > 0:
#         bot.send_message(stud.chat_id, f'–¢–µ–±–µ –Ω—É–∂–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –µ—â–µ {stud.wal1} {sklonenie_func(stud.wal1)}')
#         assess(message, stud)
#     else:
#         stud = Session.query(Student).get(stud.chat_id)
#         stud.assessed = True
#         Session.commit()
#         print(f'–°—Ç—É–¥–µ–Ω—Ç {stud} —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª 10 % –∫–æ—à–µ–ª—å–∫–∞ –º–µ–∂–¥—É –∫–æ–º–ø–∞–Ω–∏—è–º–∏.')
#         bot.send_message(stud.chat_id, f'–¢—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏–ª —Å–≤–æ–∏ –∫–æ–∏–Ω—ã –º–µ–∂–¥—É –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –∏ —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ–±–º–µ–Ω—è—Ç—å'
#                                        f' –æ—Å–Ω–æ–≤–Ω—É—é —Å—É–º–º—É —Å—á–µ—Ç–∞ ({stud.balance} {sklonenie_func(stud.balance)}) –Ω–∞ –º–µ—Ä—á!\n'
#                                        f'–ü–µ—Ä–µ—Ö–æ–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –æ—Ñ–æ—Ä–º–ª—è–π –∑–∞–∫–∞–∑!\nhttps://docs.google.com/forms/d/e/1FAIpQLSdocdxJaXBGHGDhcssgJoip1WiuTZ5SjiV--82mjxssw2fkLw/viewform\n'
#                                        f'–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ –ù–µ–¥–µ–ª–µ –ö–∞—Ä—å–µ—Ä—ã :)')
#
#
# def admit_coins(coins, key, stud):
#     company = Session.query(Company).filter(Company.name == key).one()
#     company.balance += coins
#     stud = Session.query(Student).get(stud.chat_id)
#     stud.wal1 -= coins
#     stud.balance -= coins
#     print(f'{stud} –Ω–∞—á–∏—Å–ª–∏–ª –∫–æ–º–ø–∞–Ω–∏–∏ {company.name} {coins} –∫–æ–∏–Ω–æ–≤')
#     Session.commit()
